if (isMainModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {

    dataBinding {
        enabled = true
    }

    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        multiDexEnabled true
        if(isNeedFaceModule.toBoolean()){
            buildConfigField "boolean", "isNeedFace", "true"
        }else {
            buildConfigField "boolean", "isNeedFace", "false"
        }
        if(isNeedMvvmModule.toBoolean()){
            buildConfigField "boolean", "isNeedMvvm", "true"
        }else{
            buildConfigField "boolean", "isNeedMvvm", "false"
        }
        if(isNeedCardModule.toBoolean()){
            buildConfigField "boolean", "isNeedCard", "true"
        }else{
            buildConfigField "boolean", "isNeedCard", "false"
        }
    }

    sourceSets {
        main {
            if (isMainModule.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //implementation 'com.yb:lib_common:1.0.0'

/*    api(rootProject.ext.dependencies.appcompatV7)
    api(rootProject.ext.dependencies.support_v4)*/

    implementation project(':lib_common')
    annotationProcessor rootProject.ext.dependencies.arouter_compiler
}
