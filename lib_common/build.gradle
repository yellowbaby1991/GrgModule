apply plugin: 'com.android.library'
apply plugin: 'maven'
//apply from: 'upload.gradle'  用于局域网maven

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

uploadArchives {
    repositories.mavenDeployer {
        //maven 本地文件地址
        def mavenLib = file(getProperty('mavenPath'))
        repository(url: "file://${mavenLib.absolutePath}")
        pom.project {
            version VERSIONID
            groupId GROUDID
            artifactId ARTIFACTID
        }
    }

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api(rootProject.ext.dependencies.appcompatV7)
    api(rootProject.ext.dependencies.support_v4)
    api(rootProject.ext.dependencies.volley)
    api(rootProject.ext.dependencies.fastjson)

    implementation files('libs/android-logging-log4j-1.0.3.jar')
    implementation files('libs/log4j-1.2.17.jar')

    //解除反射限制
    api(rootProject.ext.dependencies.reflection) {
        exclude module: "support-v4"
    }

    //阿里路由
    api(rootProject.ext.dependencies.arouter_api) {
        exclude module: "support-v4"
    }

    debugApi(rootProject.ext.dependencies.debugleak)
    releaseApi(rootProject.ext.dependencies.releaseleak)
    debugApi(rootProject.ext.dependencies.debugblock)
    releaseApi(rootProject.ext.dependencies.releaseblock)

    annotationProcessor rootProject.ext.dependencies.arouter_compiler
}
